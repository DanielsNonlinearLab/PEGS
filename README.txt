PeGS (Photoelastic Grain Solver), a MATLAB implementation inspired by James Puckett’s peDiskSolve (Phd-Thesis 2012), available at http://nile.physics.ncsu.edu

If you use this new version please cite the following paper
K.E. Daniels, J. E. Kollmer & J. G. Puckett, "Photoelastic force measurements in granular materials", Rev. Sci. Inst. (201X)
DOI: XXXXXX

This program itself is split into three parts. 

1. PeGSDiskPrep.m - a particle detector, neighbor finder and contact validator.

2. PeGSDiskSolve.m - the actual photo elastic disk solver. 

3. PeGSForceAdjMat.m - a postprocessing tool

PeGSDiskPrep.m takes an image or a series of images and detects circular particles in them, identifies potential contacts and makes a guess to the contact force based on the gradient sugare method. To get the best possible result you have to vary the ‘g2threshold’ and ‘CR’ parameters for your specific images. 
If the ‘verbose’ option is set to true you will be shown an image with the detected particles and a set of yellow lines symbolizing the connections found between particles. If in doubt have the script detect more contacts than you think are there since the force fitting is free to set the contact to zero but cannot create any new contacts. The result will be a single .mat file for each image in the same directory name the same as the image with and the suffix _preprocessing.mat. This is an input file for step 2. 

PeGSDiskSolve.m will process all input files found in the specified directory and fit normal and tangential forces to the particles. This step is parallelized and joDiskSolve.m can be run on a high performance computer. The result will be files with the suffix ‘_solved.mat’ again in the same directory as the input. If - for example for debugging reasons - you want to watch the fit for each particle converge then set the ‘verbose’ variable at the beginning of the script to ‘true’.

PeGSForceAdjMat.m will take each _solved.mat file generated by the disc solver and compute among other things a synthetic force image and a (weighted) adjacency matrix for the contacts found. 

If you have any questions or comments please contact 
Jonathan Kollmer (jekollme@ncsu.edu)

Last update 2016/10/05 by Jonathan Kollmer